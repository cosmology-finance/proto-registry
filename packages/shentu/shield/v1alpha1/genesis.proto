syntax = "proto3";
package shentu.shield.v1alpha1;

import "gogoproto/gogo.proto";
import "cosmos/base/v1beta1/coin.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";
import "shentu/shield/v1alpha1/shield.proto";

option go_package = "github.com/certikfoundation/shentu/x/shield/types";

// GenesisState defines the shield genesis state.
message GenesisState {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    string shield_admin = 1 [ (gogoproto.moretags) = "yaml:\"shield_admin\"" ];
    uint64 next_pool_id = 2 [ (gogoproto.moretags) = "yaml:\"next_pool_id\"" ];
    uint64 next_purchase_id = 3 [ (gogoproto.moretags) = "yaml:\"next_purchase_id\"" ];
    PoolParams pool_params = 4 [ (gogoproto.moretags) = "yaml:\"pool_params\"", (gogoproto.nullable) = false ];    
    ClaimProposalParams claim_proposal_params = 5 [ (gogoproto.moretags) = "yaml:\"claim_proposal_params\"", (gogoproto.nullable) = false ];
    DistributionParams distribution_params = 6 [ (gogoproto.moretags) = "yaml:\"distribution_params\"", (gogoproto.nullable) = false ];
    string total_collateral = 7 [ (gogoproto.moretags) = "yaml:\"total_collateral\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    string total_withdrawing = 8 [ (gogoproto.moretags) = "yaml:\"total_withdrawing\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    string total_shield = 9 [ (gogoproto.moretags) = "yaml:\"total_shield\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    string total_claimed = 10 [ (gogoproto.moretags) = "yaml:\"total_claimed\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    repeated cosmos.base.v1beta1.DecCoin service_fees = 11 [ (gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins" ];
    repeated cosmos.base.v1beta1.DecCoin remaining_service_fees = 12 [ (gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.DecCoins" ];
    repeated Pool pools = 13 [ (gogoproto.moretags) = "yaml:\"pools\"", (gogoproto.nullable) = false ];
    repeated Provider providers = 14 [ (gogoproto.moretags) = "yaml:\"providers\"", (gogoproto.nullable) = false ];
    repeated PurchaseList purchase_lists = 15 [ (gogoproto.moretags) = "yaml:\"purchases\"", (gogoproto.nullable) = false ];
    repeated Withdraw withdraws = 16 [ (gogoproto.moretags) = "yaml:\"withdraws\"", (gogoproto.nullable) = false ];
    google.protobuf.Timestamp last_update_time = 17 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"last_update_time\""];
    string shield_staking_rate = 18 [ (gogoproto.moretags) = "yaml:\"shield_staking_rate\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
    string global_staking_pool = 19 [ (gogoproto.moretags) = "yaml:\"global_staking_pool\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
    repeated ShieldStaking stake_for_shields = 20 [ (gogoproto.moretags) = "yaml:\"stake_for_shields\"", (gogoproto.nullable) = false ];
    repeated OriginalStaking original_stakings = 21 [ (gogoproto.moretags) = "yaml:\"original_stakings\"", (gogoproto.nullable) = false ];
    repeated ProposalIDReimbursementPair proposalID_reimbursement_pairs = 22 [ (gogoproto.moretags) = "yaml:\"proposalID_reimbursement_pairs\"", (gogoproto.nullable) = false ];
}

message OriginalStaking {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    uint64 purchase_id = 1 [ (gogoproto.moretags) = "yaml:\"purchase_id\"" ];
    string amount = 2 [ (gogoproto.moretags) = "yaml:\"amount\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Int", (gogoproto.nullable) = false ];
}

message ProposalIDReimbursementPair {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    uint64 proposal_id = 1 [ (gogoproto.moretags) = "yaml:\"proposal_id\"" ];
    Reimbursement reimbursement = 2 [ (gogoproto.moretags) = "yaml:\"reimbursement\"", (gogoproto.nullable) = false ];
}

message Reimbursement {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    repeated cosmos.base.v1beta1.Coin amount = 1 [ (gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins" ];
    string beneficiary = 2 [ (gogoproto.moretags) = "yaml:\"beneficiary\"" ];
    google.protobuf.Timestamp payout_time = 3 [(gogoproto.stdtime) = true, (gogoproto.nullable) = false, (gogoproto.moretags) = "yaml:\"payout_time\""];
}

// PoolParams defines the parameters for the shield pool.
message PoolParams {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    google.protobuf.Duration protection_period = 1 [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true, (gogoproto.jsontag) = "protection_period,omitempty",(gogoproto.moretags) = "yaml:\"protection_period\"" ];
    string shield_fees_rate = 2 [ (gogoproto.jsontag) = "shield_fees_rate,omitempty",(gogoproto.moretags) = "yaml:\"shield_fees_rate\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
    google.protobuf.Duration withdraw_period = 3 [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true, (gogoproto.jsontag) = "withdraw_period,omitempty",(gogoproto.moretags) = "yaml:\"withdraw_period\"" ];
    string pool_shield_limit = 4 [ (gogoproto.jsontag) = "pool_shield_limit,omitempty",(gogoproto.moretags) = "yaml:\"pool_shield_limit\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
    repeated cosmos.base.v1beta1.Coin min_shield_purchase = 5 [ (gogoproto.jsontag) = "min_shield_purchase,omitempty",(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins" ];
}

// ClaimProposalParams defines the parameters for the shield claim proposals.
message ClaimProposalParams {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    google.protobuf.Duration claim_period = 1 [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true, (gogoproto.jsontag) = "claim_period,omitempty",(gogoproto.moretags) = "yaml:\"claim_period\"" ];
    google.protobuf.Duration payout_period = 2 [ (gogoproto.nullable) = false, (gogoproto.stdduration) = true, (gogoproto.jsontag) = "payout_period,omitempty",(gogoproto.moretags) = "yaml:\"payout_period\"" ];
    repeated cosmos.base.v1beta1.Coin min_deposit = 3 [ (gogoproto.jsontag) = "min_deposit,omitempty",(gogoproto.nullable) = false, (gogoproto.castrepeated) = "github.com/cosmos/cosmos-sdk/types.Coins" ];
    string deposit_rate = 4 [ (gogoproto.jsontag) = "deposit_rate,omitempty",(gogoproto.moretags) = "yaml:\"deposit_rate\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
    string fees_rate = 5 [ (gogoproto.jsontag) = "fees_rate,omitempty",(gogoproto.moretags) = "yaml:\"fees_rate\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
}

// DistributionParams defines the parameters for shield block reward.
message DistributionParams {
    option (gogoproto.equal) = false;
    option (gogoproto.goproto_getters) = false;

    string model_param_a = 1 [ (gogoproto.moretags) = "yaml:\"model_param_a\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
    string model_param_b = 2 [ (gogoproto.moretags) = "yaml:\"model_param_b\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
    string max_leverage = 3 [ (gogoproto.moretags) = "yaml:\"max_leverage\"", (gogoproto.customtype) = "github.com/cosmos/cosmos-sdk/types.Dec", (gogoproto.nullable) = false ];
}
